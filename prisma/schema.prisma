generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  //base
  id      String   @id @unique @default(uuid())
  created DateTime @default(now())
  updated DateTime @updatedAt

  //props
  name      String
  hash      String
  suspended Boolean   @default(false)
  superuser Boolean   @default(false)
  workspace Workspace @relation(fields: [workspaceId], references: [id])

  //relations 
  workspaceId String @unique
}

model Workspace {
  //base
  id      String   @id @unique @default(uuid())
  created DateTime @default(now())
  updated DateTime @updatedAt

  //props
  name     String    @default("My Workspace")
  projects Project[]

  //relations 
  user User?
}

model Project {
  //base
  id      String   @id @unique @default(uuid())
  created DateTime @default(now())
  updated DateTime @updatedAt

  //props
  name  String   @default("New Project")
  links String[]
  todo  Todo     @relation(fields: [todoId], references: [id])

  //relations 
  workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId String?
  todoId      String     @unique
}

model Todo {
  //base
  id      String   @id @unique @default(uuid())
  created DateTime @default(now())
  updated DateTime @updatedAt

  //props
  name    String      @default("New Todo")
  entries TodoEntry[]

  //relations
  project Project?
}

model TodoEntry {
  //base
  id      String   @id @unique @default(uuid())
  created DateTime @default(now())
  updated DateTime @updatedAt

  //props
  name String @default("New Todo Entry")
  tag  Tag    @relation(fields: [tagId], references: [id])

  //relations 
  todo   Todo?   @relation(fields: [todoId], references: [id])
  todoId String?
  tagId  String
}

model Tag {
  //base
  id      String   @id @unique @default(uuid())
  created DateTime @default(now())
  updated DateTime @updatedAt

  //props 
  name  String @default("New Tag")
  color String

  //relations 
  TodoEntry TodoEntry[]
}
